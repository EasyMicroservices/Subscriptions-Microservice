// <auto-generated />
using System;
using EasyMicroservices.SubscriptionsMicroservice.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyMicroservices.SubscriptionsMicroservice.Migrations
{
    [DbContext(typeof(SubscriptionContext))]
    partial class SubscriptionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueIdentity")
                        .HasColumnType("nvarchar(450)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.HasKey("Id");

                    b.HasIndex("CreationDateTime");

                    b.HasIndex("DeletedDateTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("ModificationDateTime");

                    b.HasIndex("UniqueIdentity");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubscriptionUserEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubscriptionUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UniqueIdentity")
                        .HasColumnType("nvarchar(450)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.HasKey("Id");

                    b.HasIndex("CreationDateTime");

                    b.HasIndex("DeletedDateTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("ModificationDateTime");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("SubscriptionUserEntityId");

                    b.HasIndex("UniqueIdentity");

                    b.ToTable("SubscriptionParameter");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterValueEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("SubscriptionParameterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubscriptionParameterValueEntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("UniqueIdentity")
                        .HasColumnType("nvarchar(450)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreationDateTime");

                    b.HasIndex("DeletedDateTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("ModificationDateTime");

                    b.HasIndex("SubscriptionParameterId");

                    b.HasIndex("SubscriptionParameterValueEntityId");

                    b.HasIndex("UniqueIdentity");

                    b.ToTable("SubscriptionParameterValue");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionUserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UniqueIdentity")
                        .HasColumnType("nvarchar(450)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.HasKey("Id");

                    b.HasIndex("CreationDateTime");

                    b.HasIndex("DeletedDateTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("ModificationDateTime");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("UniqueIdentity");

                    b.ToTable("SubscriptionUser");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterEntity", b =>
                {
                    b.HasOne("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionEntity", "Subscriptions")
                        .WithMany("SubscriptionParameters")
                        .HasForeignKey("SubscriptionId");

                    b.HasOne("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionUserEntity", "SubscriptionUsers")
                        .WithMany("SubscriptionParameters")
                        .HasForeignKey("SubscriptionId");

                    b.HasOne("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionUserEntity", null)
                        .WithMany("Parameters")
                        .HasForeignKey("SubscriptionUserEntityId");

                    b.Navigation("SubscriptionUsers");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterValueEntity", b =>
                {
                    b.HasOne("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterEntity", "SubscriptionParameters")
                        .WithMany("Values")
                        .HasForeignKey("SubscriptionParameterId");

                    b.HasOne("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterValueEntity", null)
                        .WithMany("Values")
                        .HasForeignKey("SubscriptionParameterValueEntityId");

                    b.Navigation("SubscriptionParameters");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionUserEntity", b =>
                {
                    b.HasOne("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionEntity", "Subscriptions")
                        .WithMany("SubscriptionUsers")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionEntity", b =>
                {
                    b.Navigation("SubscriptionParameters");

                    b.Navigation("SubscriptionUsers");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterEntity", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionParameterValueEntity", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("EasyMicroservices.SubscriptionsMicroservice.Database.Entities.SubscriptionUserEntity", b =>
                {
                    b.Navigation("Parameters");

                    b.Navigation("SubscriptionParameters");
                });
#pragma warning restore 612, 618
        }
    }
}
